name: CI/CD Staging

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches:    
      - '**'
      - '!master'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  
  main:
    name: Test & Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Java Setup
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Gradle Build
        uses: eskatos/gradle-command-action@v1
        with:
          arguments: clean assemble


  #release:
  #  name: Release
  #  needs: main
  #  runs-on: ubuntu-latest
  #  steps:
  #    - uses: actions/checkout@v2

  #    - run: npm ci

  #    - if: github.ref == 'refs/heads/master'
  #      run: npx -p @semantic-release/changelog -p @semantic-release/git -p semantic-release semantic-release


  deploy:
    name: Deploy
    needs: main
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Java Setup
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Gradle Build
        uses: eskatos/gradle-command-action@v1
        with:
          arguments: clean assemble

      - name: Prepare Cloud Build
        uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.GCLOUD_AUTH }}

      - name: Cloud Run Deployment
        run: |
          gcloud config set project ${PROJECT_ID_STA}

          touch empty.ignore
          gsutil cp gs://keystorage-${PROJECT_ID_STA}/credentials.json credentials.json
          
          gcloud builds submit --ignore-file empty.ignore --tag gcr.io/${PROJECT_ID_STA}/machbarschaft-api:develop

          gcloud run deploy machbarschaft-api-sta \
            --image gcr.io/${PROJECT_ID_STA}/machbarschaft-api:develop \
            --update-env-vars google_maps_api_key=${MAPS_API_KEY} \
            --region europe-west1 \
            --platform managed
        env:
          MAPS_API_KEY: ${{ secrets.MAPS_API_KEY_STA }}
          PROJECT_ID_STA: ${{ secrets.PROJECT_ID_STA }}
          

  create-pr:
    name: Create PR
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - if: ${{ github.ref != 'refs/heads/develop' }}
        name: pull-request develop
        uses: repo-sync/pull-request@v2
        with:
          destination_branch: "develop"
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - if: ${{ github.ref == 'refs/heads/develop' }}
        name: pull-request master
        uses: repo-sync/pull-request@v2
        with:
          destination_branch: "master"
          github_token: ${{ secrets.GITHUB_TOKEN }}
